class SocketRouter {
  constructor() {
    this.CONNECTION = 'connection';
    this.DISCONNECT = 'disconnect';

    this.QUESTION_ADDED = 'QUESTION_ADDED';

    this.REFLECTIVE_ASSESSMENT_START = 'REFLECTIVE_ASSESSMENT_START';
    this.REFLECTIVE_ASSESSMENT_STOP = 'REFLECTIVE_ASSESSMENT_STOP';
    this.RA_RESPONSE_NUMBER = 'RA_RESPONSE_NUMBER';
    this.RA_RESPONSE_REVIEWED = 'RA_RESPONSE_REVIEWED';
    this.STARTED_REFLECTIVE_ASSESSMENT = 'STARTED_REFLECTIVE_ASSESSMENT';
    
    this.REFLECTIVE_ASSESSMENT_RESPONSE = 'REFLECTIVE_ASSESSMENT_RESPONSE';


    this.INSTANT_ASSESSMENT_START = 'INSTANT_ASSESSMENT_START';
    this.INSTAND_ASSESSMENT_STOP = 'INSTANT_ASSESSMENT_START';

    this.MC_SELECTION_MADE = 'MC_SELECTION_MADE';
    this.MC_STOP = 'MC_STOP';

    this.STUDENT_JOINED = 'STUDENT_JOINED';
    this.STUDENT_LEFT = 'STUDENT_LEFT';
    
    this.JOIN_COURSESESSION = 'JOIN_COURSESESSION';
    
    this.VOTED_ON_QUESTION = 'VOTED_ON_QUESTION';
    
    this.QUESTION_DISMISSED = 'QUESTION_DISMISSED';
    
    this.COURSE_SESSION_END = 'COURSE_SESSION_END';
    
    this.UPDATE_CONFUSION = 'UPDATE_CONFUSION';

    this.ALERT_ADDED = 'ALERT_ADDED';

  };
  
  
  
  static buildEmit (route, courseSessionId) {
    return route + ':' + courseSessionId;
  }
}

module.exports = SocketRouter;